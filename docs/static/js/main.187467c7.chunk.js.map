{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getgifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCLlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGpC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAKA,Q,uBCPJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAYZY,GAZY,4CAAH,sDCGPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECCb,SAACA,GAAc,IAAD,EAGZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KAwBtC,OAhBAC,qBAAU,WAENjB,EAAQC,GACHiB,MAAK,SAAAC,GAGFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAACb,IAKGc,EDtBwBK,CAAanB,GAAhCU,EAHyB,EAG9BJ,KAAaO,EAHiB,EAGjBA,QAMpB,OACI,qCACI,oBAAIjB,UAAU,oCAAd,SAAmDI,IAClDa,GAAW,mBAAGjB,UAAU,uEAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEkBtB2B,EAnCM,WAAM,MAIazC,mBAAS,CAAC,cAJvB,mBAIhB0C,EAJgB,KAIJ3C,EAJI,KAWvB,OACI,qCACI,8CACA,cAAC,EAAD,CACIA,cAAeA,IAEnB,uBACA,6BAEQ2C,EAAWb,KAAI,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADJA,Y,MCpB7BsB,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.187467c7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState(''); \r\n\r\n    const handleInputchange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2 ){\r\n            setCategories(cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputchange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    // console.log( {id, title, url} );\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=3MRHVTQkVHLUD4cbnr1wAyihawfw0qB7`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n\r\n\r\n\r\n}\r\n","import React/*, { useState, useEffect }*/ from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from './../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    // console.log(loading);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__slow animate__repeat-2 animate__headShake\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useState, useEffect } from 'react';\r\nimport { getGifs } from './../helpers/getgifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                // console.log(imgs);\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category]);\r\n\r\n\r\n\r\n\r\n    return state; // { data: [], loading: true }\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory'\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = [ 'One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    // setCategories([...categories,'Megaman X']);\r\n    //     setCategories(cats => [...cats, 'Megaman X']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory\r\n                setCategories={setCategories}\r\n            />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                       <GifGrid \r\n                       key ={category}\r\n                       category={category}/>\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}